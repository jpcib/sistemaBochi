---
title: "Source_pages_v2"
---

```{r packages, warning=FALSE,error=FALSE,message=FALSE,include=FALSE}

packages <- c("tidyverse")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}

invisible(lapply(packages, library, character.only = TRUE))

```

```{r data, warning=FALSE,error=FALSE,message=FALSE,include=FALSE}
data <- read_csv("../data/base_completa_link_v6.csv") %>%
  # slice_head(n = 3)
  glimpse()
```

```{r generate_qmd, warning=FALSE,error=FALSE,message=FALSE,include=FALSE}

generate_qmd <- function(id_edificio) {
  # get the school name and address from the data frame
  nombre_establecimiento <- data$establecimiento[data$cui == id_edificio]
  direccion_establecimiento <- data$domicilio[data$cui == id_edificio]

  # create the YAML header
  yaml_header <- paste0("---\n",
                        "title: '", direccion_establecimiento, "'\n",
                        "subtitle: '", nombre_establecimiento, "'\n",
                        "---\n\n", 
                        "#")
  

  
  # create the file name
  file_name <- paste0(id_edificio, ".qmd")
  
  # write the YAML header and some example content to the .QMD file
  writeLines(yaml_header, file_name)

}

# apply the function to each school in the data frame
for (id_edificio in data$cui) {
  generate_qmd(id_edificio)
}

```

```{r data_infra, warning=FALSE,error=FALSE,message=FALSE,include=FALSE}
data_infra <- read_csv("../data/infra_gop_13-09.csv") %>% 
  mutate(intervenciones = str_to_sentence(intervenciones)) %>% 
  # select(-c(nota_de_inicio:avance_de_obra_real)) %>% 
  # filter(n_proyecto != "x093") %>% #elimino goleta santa cruz
  arrange(cui) %>% 
  # slice(5:14) %>% 
  glimpse()

```


```{r add_project_section_v6, include=FALSE}

#V6
add_project_section_v6 <- function(data, dir) {
  # Loop through each id in the dataset
  for (i in unique(data$cui)) {
    
    # Generate the file name for the corresponding Quarto Markdown document
    file_name <- paste0(i, ".qmd")
    file_path <- file.path(dir, file_name)
    
    # Check if the file exists
    if (file.exists(file_path)) {
      
      # Subset the dataset for the current id
      id_data <- data[data$cui == i, ]
      
      # Initialize an empty list to store the projects_list for each row
      projects_list <- list()
      
      # Loop through each row in id_data and generate the projects_list
      for (j in seq_len(nrow(id_data))) {
        if (id_data$estado[j] == "En Obra") {
          project <- paste0("* ", id_data$intervenciones[j], " \n", 
                            "    + ", id_data$eje[j], " - ", id_data$estado[j], " \n",
                            "    + ", "Inicio de obra: ", id_data$inicio_obra[j], " - ", "Avance: ", id_data$avance_de_obra[j], " - ", "Fecha de finalizaciÃ³n: ", id_data$fin_obra[j], " \n\n")  
        } else if (id_data$estado[j] == "Finalizado") {
          project <- paste0("* ", id_data$intervenciones[j], " \n", 
                            "    + ", id_data$eje[j], " - ", id_data$estado[j], " \n",
                            "    + ", "Finalizada el ", id_data$fin_obra[j], " \n\n") 
        } else {
          project <- paste0("* ", id_data$intervenciones[j], " \n", 
                            "    + ", id_data$eje[j], " - ", id_data$estado[j], " \n",
                            "    + ", "Inicio de obra: ", id_data$inicio_obra[j], " \n\n") 
        }
        projects_list[[j]] <- project
      }
      
      # Combine the projects_list for all rows
      project_section <- paste0("## Infraestructura\n\n", paste(unlist(projects_list), collapse = "\n"), "\n\n")
      
      # Read the contents of the Quarto Markdown file
      file_contents <- readLines(file_path)
      
      # Find the position of the first heading in the file
      heading_pos <- grep("^#", file_contents)[1]
      
      # Check if heading_pos is NA
      if (is.na(heading_pos)) {
        cat("Warning: File", file_name, "does not contain any heading\n")
        next
      }
      
      # Insert the project section after the first heading
      updated_contents <- append(file_contents, project_section, after = heading_pos)
      
      # Write the updated contents
      writeLines(updated_contents, file_path)
      
      # Print a message indicating the file was updated
      cat("Updated", file_name, "\n")
      
    } else {
      
      # Print a warning if the file doesn't exist
      cat("Warning: File", file_name, "not found in directory\n")
      
    }
    
  }
}


add_project_section_v6(data = data_infra, dir = ".")


```



```{r data_mtom, warning=FALSE,error=FALSE,message=FALSE,include=FALSE}
data_mtom <- read_csv("../data/mtom_2021_2023_13-09_framed.csv") %>% 
  # filter(ano %in% c("2023", "2022", "2021")) %>%
  drop_na(cui) %>% 
  arrange(desc(ano)) %>%
  glimpse()
```

```{r add_service_section, include=FALSE}
add_service_section_v3 <- function(data, dir) {
  # Loop through each cui in the dataset
  for (i in unique(data$cui)) {
    
    # Generate the file name for the corresponding Quarto Markdown document
    file_name <- paste0(i, ".qmd")
    file_path <- file.path(dir, file_name)
    
    # Check if the file exists
    if (file.exists(file_path)) {
      
      # Subset the dataset for the current cui
      cui_data <- data[data$cui == i, ]
      
      # Create a bulleted list of the services and areas
      services_list <- paste0("* "," (", cui_data$ano, ") ", cui_data$prestaciones, " \n", 
                              "    + ", cui_data$descripcion_obra, "\n")  
      
      # Combine the title and bulleted list
      services_section <- paste0("\n\n", "## Mantenimiento\n\n", paste(services_list, collapse = "\n"), "\n\n")
      
      # Read the contents of the Quarto Markdown file
      file_contents <- readLines(file_path)
      
      # Find the position of the Infrastructure header in the file
      infra_pos <- grep("^## Infraestructura", file_contents)
      
      if (length(infra_pos) > 0) {
        # Find the position of the last bulleted item under the Infrastructure header
        infra_end_pos <- length(file_contents)
        
        # Insert the services section after the last bulleted item under the Infrastructure header
        updated_contents <- append(file_contents, services_section, after = infra_end_pos)
      } else {
        # Find the position of the first heading in the file
        heading_pos <- grep("^#", file_contents)[1]
        if (is.na(heading_pos)) {
          cat("Warning: File", file_name, "does not contain any heading\n")
          next
        }
        # Insert the services section after the first heading
        updated_contents <- append(file_contents, services_section, after = heading_pos)
      }
      
      # Write the updated contents back to the file
      writeLines(updated_contents, file_path)
      
      # Print a message indicating the file was updated
      cat("Updated", file_name, "\n")
      
    } else {
      
      # Print a warning if the file doesn't exist
      cat("Warning: File", file_name, "not found in directory\n")
      
    }
    
  }
}



add_service_section_v3(data_mtom, dir = ".")

```



```{r data_mobi, warning=FALSE,error=FALSE,message=FALSE,include=FALSE}
data_mobi <- read_csv("../data/base_mobiliario_itemizada_13-09.csv") %>% 
  arrange(desc(entrega)) %>%
  glimpse()
```

```{r add_mobi_section, include=FALSE}

add_mobi_section_v1 <- function(data, dir) {
  # Loop through each cui in the dataset
  for (i in unique(data$cui)) {
    
    # Generate the file name for the corresponding Quarto Markdown document
    file_name <- paste0(i, ".qmd")
    file_path <- file.path(dir, file_name)
    
    # Check if the file exists
    if (file.exists(file_path)) {
      
      # Subset the dataset for the current cui
      cui_data <- data[data$cui == i, ]
      
      # Create a bulleted list of the services and areas
      services_list <- paste0("* "," (", cui_data$entrega, ") ", ": ", cui_data$texto, " \n")  
      
      # Combine the title and bulleted list
      services_section <- paste0("\n\n", "## Mobiliario\n\n", paste(services_list, collapse = "\n"), "\n\n")
      
      # Read the contents of the Quarto Markdown file
      file_contents <- readLines(file_path)
      
      # Find the position of the Infrastructure header in the file
      infra_pos <- grep("^## Infraestructura", file_contents)
      
      if (length(infra_pos) > 0) {
        # Find the position of the last bulleted item under the Infrastructure header
        infra_end_pos <- length(file_contents)
        
        # Insert the services section after the last bulleted item under the Infrastructure header
        updated_contents <- append(file_contents, services_section, after = infra_end_pos)
      } else {
        # Find the position of the first heading in the file
        heading_pos <- grep("^#", file_contents)[1]
        if (is.na(heading_pos)) {
          cat("Warning: File", file_name, "does not contain any heading\n")
          next
        }
        # Insert the services section after the first heading
        updated_contents <- append(file_contents, services_section, after = heading_pos)
      }
      
      # Write the updated contents back to the file
      writeLines(updated_contents, file_path)
      
      # Print a message indicating the file was updated
      cat("Updated", file_name, "\n")
      
    } else {
      
      # Print a warning if the file doesn't exist
      cat("Warning: File", file_name, "not found in directory\n")
      
    }
    
  }
}

add_mobi_section_v1(data_mobi, dir = ".")

```

```{r data_seguridad, warning=FALSE,error=FALSE,message=FALSE,include=FALSE}
data_seguridad <- read_csv("../data/tabla_seguridad_05102023.csv") %>% 
  mutate(status = str_to_sentence(status)) %>% 
  # filter(espacios_seguros != 0 ) %>% 
  # arrange(desc(entrega)) %>%
  glimpse()
```

```{r add_seguridad_section, include=FALSE}

add_seguridad_section_v1 <- function(data, dir) {
  # Loop through each cui in the dataset
  for (i in unique(data$cui)) {
    
    # Generate the file name for the corresponding Quarto Markdown document
    file_name <- paste0(i, ".qmd")
    file_path <- file.path(dir, file_name)
    
    # Check if the file exists
    if (file.exists(file_path)) {
      
      # Subset the dataset for the current cui
      cui_data <- data[data$cui == i, ]
      
      # Create a bulleted list of the services and areas
      services_list <- paste0("* "," Espacios seguros: ", cui_data$espacios_seguros, " - ", "Estado: ", cui_data$status , " \n", 
                              "    + ", "Guardia fÃ­sica: ", cui_data$guardia_fisica, "\n")  
      
      # Combine the title and bulleted list
      services_section <- paste0("\n\n", "## Seguridad\n\n", paste(services_list, collapse = "\n"), "\n\n")
      
      # Read the contents of the Quarto Markdown file
      file_contents <- readLines(file_path)
      
      # Find the position of the Infrastructure header in the file
      infra_pos <- grep("^## Infraestructura", file_contents)
      
      if (length(infra_pos) > 0) {
        # Find the position of the last bulleted item under the Infrastructure header
        infra_end_pos <- length(file_contents)
        
        # Insert the services section after the last bulleted item under the Infrastructure header
        updated_contents <- append(file_contents, services_section, after = infra_end_pos)
      } else {
        # Find the position of the first heading in the file
        heading_pos <- grep("^#", file_contents)[1]
        if (is.na(heading_pos)) {
          cat("Warning: File", file_name, "does not contain any heading\n")
          next
        }
        # Insert the services section after the first heading
        updated_contents <- append(file_contents, services_section, after = heading_pos)
      }
      
      # Write the updated contents back to the file
      writeLines(updated_contents, file_path)
      
      # Print a message indicating the file was updated
      cat("Updated", file_name, "\n")
      
    } else {
      
      # Print a warning if the file doesn't exist
      cat("Warning: File", file_name, "not found in directory\n")
      
    }
    
  }
}

add_seguridad_section_v1(data_seguridad, dir = ".")

```

